# Licensed under the Apache License, Version 2.0.

[workspace]

members = [
    "rust/crabdroid", #primitives for easier Java/Rust interop

    "rust/base", #basic primitives of Tesseract on Android
    "rust/transport", #transport runtime bindings for Java/Kotlin transports

    "rust/ipc", #IPC transport

    "rust/sdk", #aggregate crate for android dApp/Wallet integration in Rust
    "rust/library", #dylib that has everything java/kotlin only (nu rust) apps need in runtime

    "examples/rust/app_rust", #example of how to use Tesseract in a dApp in Rust
    "examples/rust/wallet_rust", #example of how to use Tesseract in a Wallet in Rust
]

resolver = "1"

[workspace.dependencies]
#android interop
jni = "0.20"
jni_fn = "0.1"

#tesseract
tesseract = { path = "../Tesseract.rs/tesseract" }
#tesseract = { git = "https://github.com/tesseract-one/Tesseract.rs", branch="master" }

#protocols
tesseract-protocol-test = { path = "../Tesseract.rs/protocols/test" }
tesseract-protocol-substrate = { path = "../Tesseract.rs/protocols/substrate" }
#tesseract-protocol-test = { git = "https://github.com/tesseract-one/Tesseract.rs", optional = true, branch = "master", features=["client", "service"] }
#tesseract-protocol-substrate = { git = "https://github.com/tesseract-one/Tesseract.rs", optional = true, branch = "master", features=["client", "service"] }